<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">
	
	<!--  회원 시퀀스 번호 발급 -->
	<select id="seq" resultType="int">
		SELECT MEMBER_SEQ.NEXTVAL FROM DUAL
	</select>
	
	<!-- 전체 회원 -->
		<!-- 비밀번호 질문 받아오기 -->
		<select id="getPasswordQ" resultType="passwordQDto">
			SELECT * FROM PASSWORD_Q ORDER BY PQ_NO ASC
		</select>
		
		<!-- 회원 단일 조회 > MEMBER TABLE -->
		<select id="get" resultType="memberDto" parameterType="memberDto">
			SELECT * FROM MEMBER WHERE MEMBER_ID = #{member_id}
		</select>
		
		<!-- 회원 가입 -->
		<insert id="join" parameterType="memberDto">
			INSERT INTO MEMBER VALUES(#{member_no}, #{member_id}, #{member_nick}, #{member_state}, SYSDATE, NULL, '정상', NULL)
		</insert>
		
		<!-- 전체 회원 조회 -->
		<select id="getList" resultType="memberDto">
			SELECT * FROM MEMBER ORDER BY MEMBER_NO DESC
		</select>
		
		<!-- 로그인 성공 시 로그인 시간 갱신 -->
		<update id="loginUpdate" parameterType="memberDto">
			UPDATE MEMBER SET MEMBER_LOGIN = SYSDATE WHERE MEMBER_ID = #{member_id}
		</update>
		
	
	<!-- 아로리 회원 -->
		<!-- 아로리 회원 가입일 경우 해당 회원 등록 -->
		<insert id="joinArori" parameterType="aroriMemberDto">
			INSERT INTO ARORI_MEMBER VALUES(#{member_no}, #{member_pw}, #{member_email},#{member_phone}, #{member_q}, #{member_a})
		</insert>
		
		<!-- 아로리 상제 정보 가지고 오기 -->
		<select id="getArori" resultType="aroriMemberDto" parameterType="memberDto">
			SELECT * FROM ARORI_MEMBER WHERE MEMBER_NO = (SELECT MEMBER_NO FROM MEMBER WHERE MEMBER_ID = #{member_id})
		</select>
		
		<!-- 아이디 찾기 -->
		<select id="findId" resultType="memberDto" parameterType="memberDto">
			SELECT * FROM MEMBER WHERE MEMBER_NO = (SELECT MEMBER_NO FROM ARORI_MEMBER WHERE MEMBER_PHONE = #{member_phone} AND MEMBER_Q = #{member_q} AND MEMBER_A = #{member_a})
		</select>
		
		<!-- 비밀번호 찾기 > 반환 : AroriMemberDto.getMember_email-->
		<select id="findPw" resultType="string" parameterType="map">
			SELECT B.MEMBER_EMAIL FROM MEMBER A INNER JOIN ARORI_MEMBER B ON A.MEMBER_NO = B.MEMBER_NO WHERE A.MEMBER_ID = #{member_id} AND B.MEMBER_Q = #{member_q} AND B.MEMBER_A = #{member_a}
		</select>
		
		<!-- 해당 이메일을 소유하고 있는 회원의 비밀번호를 임시 비밀번호로 변경 -->
		<update id="changeTempPw" parameterType="aroriMemberDto">
			UPDATE ARORI_MEMBER SET MEMBER_PW = #{member_pw} WHERE MEMBER_EMAIL = #{member_email}
		</update>
		
		<!-- MEMBER테이블의 회원정보삭제 -->
		<!-- 회원의 상태(REPORT_STATE)를 탈퇴로 바꾸기 (회원의 탈퇴요청 ) -->
		<update id="deleteMember" parameterType="memberDto">
		DELETE FROM MEMBER WHERE MEMBER_NO =#{member_no}
		</update>
		
		<!-- ARORI_MEMBER테이블의 회원정보삭제 -->
		<!-- 회원의 상태(REPORT_STATE)를 탈퇴로 바꾸기 (회원의 탈퇴요청 ) -->
		<update id="deleteAroriMember" parameterType="memberDto">
		DELETE FROM ARORI_MEMBER WHERE MEMBER_NO =#{member_no}
		</update>
		
		
		<!-- 회원가입시 아이디 중복검사 체크용  -->
		<select id="getCheck" resultType="MemberDto" parameterType="String">
		SELECT * FROM MEMBER WHERE MEMBER_ID = #{member_id}
		</select>
		
		<!-- 회원가입시 이메일 중복검사 체크용  -->
		<select id="getCheckEmail" resultType="MemberDto" parameterType="String">
		SELECT  * from ARORI_MEMBER where MEMBER_EMAIL =#{member_email}		
		</select>
		
		<!-- 회원가입시 닉네임 중복검사 체크용  -->
		<select id="getCheckNick" resultType="MemberDto" parameterType="String">
		SELECT * FROM MEMBER where MEMBER_NICK =#{member_nick}	
		</select>
		
			
		<!-- 회원가입시 핸드폰 중복검사 체크용  -->
		<select id="getCheckPhone" resultType="MemberDto" parameterType="String">
		SELECT * FROM ARORI_MEMBER WHERE  MEMBER_PHONE =#{member_phone}	
		</select>
		
		
</mapper>
