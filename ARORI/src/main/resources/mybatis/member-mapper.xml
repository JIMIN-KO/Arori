<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">

	<!-- 회원 시퀀스 번호 발급 -->
	<select id="seq" resultType="int">
		SELECT MEMBER_SEQ.NEXTVAL FROM DUAL
	</select>

	<!-- 전체 회원 -->
	<!-- 비밀번호 질문 받아오기 -->
	<select id="getPasswordQ" resultType="passwordQDto">
		SELECT * FROM PASSWORD_Q
		ORDER BY PQ_NO ASC
	</select>

	<!-- 회원 단일 조회 > MEMBER TABLE -->
	<select id="get" resultType="memberDto"
		parameterType="memberDto">
		SELECT * FROM MEMBER WHERE MEMBER_ID = #{member_id}
	</select>

	<!-- 회원 가입 -->
	<insert id="join" parameterType="memberDto">
		INSERT INTO MEMBER
		VALUES(#{member_no}, #{member_id}, #{member_nick},
		#{member_state},
		SYSDATE, NULL, '정상', NULL)
	</insert>

	<!-- 전체 회원 조회 -->
	<select id="getList" resultType="memberDto">
		SELECT * FROM MEMBER ORDER BY
		MEMBER_NO ASC
	</select>

	<!-- 로그인 성공 시 로그인 시간 갱신 -->
	<update id="loginUpdate" parameterType="memberDto">
		UPDATE MEMBER SET
		MEMBER_LOGIN = SYSDATE WHERE MEMBER_ID = #{member_id}
	</update>


	<!-- 아로리 회원 -->
	<!-- 아로리 회원 가입일 경우 해당 회원 등록 -->
	<insert id="joinArori" parameterType="aroriMemberDto">
		INSERT INTO ARORI_MEMBER
		VALUES(#{member_no}, #{member_pw},
		#{member_email},#{member_phone},
		#{member_q}, #{member_a})
	</insert>

	<!-- 아로리 상제 정보 가지고 오기 -->
	<select id="getArori" resultType="aroriMemberDto"
		parameterType="memberDto">
		SELECT * FROM ARORI_MEMBER WHERE MEMBER_NO = (SELECT
		MEMBER_NO FROM MEMBER
		WHERE MEMBER_ID = #{member_id})
	</select>

	<!-- 아이디 찾기 -->
	<select id="findId" resultType="memberDto"
		parameterType="memberDto">
		SELECT * FROM MEMBER WHERE MEMBER_NO = (SELECT MEMBER_NO
		FROM ARORI_MEMBER
		WHERE MEMBER_PHONE = #{member_phone} AND MEMBER_Q =
		#{member_q} AND
		MEMBER_A = #{member_a})
	</select>

	<!-- 비밀번호 찾기 > 반환 : AroriMemberDto.getMember_email -->
	<select id="findPw" resultType="string" parameterType="map">
		SELECT
		B.MEMBER_EMAIL FROM MEMBER A INNER JOIN ARORI_MEMBER B ON A.MEMBER_NO
		= B.MEMBER_NO WHERE A.MEMBER_ID = #{member_id} AND B.MEMBER_Q =
		#{member_q} AND B.MEMBER_A = #{member_a}
	</select>

	<!-- 해당 이메일을 소유하고 있는 회원의 비밀번호를 임시 비밀번호로 변경 -->
	<update id="changeTempPw" parameterType="aroriMemberDto">
		UPDATE ARORI_MEMBER SET
		MEMBER_PW = #{member_pw} WHERE MEMBER_EMAIL =
		#{member_email}
	</update>

	<!-- 아로리 회원 마이 페이지 -->
	<select id="getmyInfo" parameterType="int"
		resultType="AroriMemberDto">
		SELECT member_email, member_phone,member_q, member_a FROM
		ARORI_MEMBER where
		member_no=#{member_no}
	</select>

	<!-- 아로리 회원 정보 수정 -->
	<update id="updateArori" parameterType="aroriMemberDto">
		UPDATE ARORI_MEMBER SET
		MEMBER_EMAIL=#{member_email}, MEMBER_PHONE=#{member_phone},MEMBER_Q
		=#{member_q},MEMBER_A=#{member_a}
		WHERE MEMBER_NO=#{member_no}
	</update>

	<!-- 소셜 회원 마이 페이지 -->
	<!-- 아로리 회원 마이 페이지 -->
	<select id="socialMyInfo" parameterType="int"
		resultType="MemberDto">
		SELECT member_nick, member_state,member_join, member_login
		FROM MEMBER where
		member_no=#{member_no}
	</select>

	<!-- 소셜 회원 정보 수정 (윤아) -->
	<update id="updateSocial" parameterType="memberDto">
		UPDATE MEMBER SET
		MEMBER_NICK= #{member_nick}
		WHERE member_no=#{member_no}
	</update>

	<!-- 정보수정을 위한 비밀번호 존재여부 (윤아) -->
	<select id="getPw" resultType="int">
		SELECT count (*) FROM arori_member
		WHERE member_pw=#{member_pw}
	</select>


	<!-- 아로리 회원 전체 조회 -->
	<select id="getAroriList" resultType="aroriMemberDto">
		SELECT * FROM arori_member
		ORDER BY member_no ASC
	</select>


	<resultMap type="memberDto" id="aroriMemberDto">
		<result column="member_no" property="member_no" />
		<result column="member_pw" property="member_pw" />
		<result column="member_email" property="member_email" />
		<result column="member_phone" property="member_phone" />
	</resultMap>

	<resultMap type="memberDto" id="memberDto">
		<result column="member_no" property="member_no" />
		<result column="member_id" property="member_id" />
		<result column="member_nick" property="member_nick" />
		<result column="member_state" property="member_state" />
		<result column="member_join" property="member_join" />
		<result column="member_login" property="member_login" />
		<result column="report_state" property="member_state" />
		<result column="suspension" property="member_suspension" />
	</resultMap>


	<select id="resultMap" resultType="memberDto">
		SELECT *FROM MEMBER m left
		OUTER JOIN arori_member a on
		m.member_no=a.member_no ORDER BY
		m.member_no ASC
	</select>

	<select id="resultMap2" resultType="aroriMemberDto">
		SELECT *FROM MEMBER m left
		OUTER JOIN arori_member a on
		m.member_no=a.member_no ORDER BY
		m.member_no ASC
	</select>

	<update id="updateMember">
		UPDATE MEMBER SET MEMBER_state=#{member_state},
		member_nick=#{member_nick},
		report_state=#{report_state},
		suspension=#{suspension}
		WHERE member_id=#{member_id}
	</update>





	<!-- MEMBER테이블의 회원정보삭제 -->
	<update id="deleteMember" parameterType="memberDto">
		DELETE FROM MEMBER WHERE
		MEMBER_NO =#{member_no}
	</update>

	<!-- ARORI_MEMBER테이블의 회원정보삭제 -->
	<update id="deleteAroriMember" parameterType="memberDto">
		DELETE FROM
		ARORI_MEMBER WHERE MEMBER_NO =#{member_no}
	</update>


	<!-- 회원가입시 아이디 중복검사 체크용 -->
	<select id="getCheck" resultType="MemberDto"
		parameterType="String">
		SELECT * FROM MEMBER WHERE MEMBER_ID = #{member_id}
	</select>

	<!-- 회원가입시 이메일 중복검사 체크용 -->
	<select id="getCheckEmail" resultType="MemberDto"
		parameterType="String">
		SELECT * from ARORI_MEMBER where MEMBER_EMAIL
		=#{member_email}
	</select>

	<!-- 회원가입시 닉네임 중복검사 체크용 -->
	<select id="getCheckNick" resultType="MemberDto"
		parameterType="String">
		SELECT * FROM MEMBER where MEMBER_NICK =#{member_nick}
	</select>


	<!-- 회원가입시 핸드폰 중복검사 체크용 -->
	<select id="getCheckPhone" resultType="MemberDto"
		parameterType="String">
		SELECT * FROM ARORI_MEMBER WHERE MEMBER_PHONE
		=#{member_phone}
	</select>

	<!--arori-member의 패스워드를 변경 -->
	<update id="changeAroriPW" parameterType="aroriMemberDto">

		UPDATE ARORI_MEMBER SET
		MEMBER_PW= #{member_pw} WHERE member_no=#{member_no}

	</update>

	<!-- (지민)member_no로 단일조회 -->
	<select id="getNo" resultType="memberDto" parameterType="int">
		SELECT *
		FROM member WHERE member_no = #{member_no}
	</select>


</mapper>
