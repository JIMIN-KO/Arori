<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.kh.arori">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
	</context:component-scan>

	<!-- 
	 	정적 자원은 DispatcherServlet이 처리하면 안된다
	 	- 있는 그대로 사전 처리 없이 접근하도록 해야함
	 	- lovation은 실제 위치를 작성
	 	- mapping은 접근할 주소를 작성
	 	- **은 하위 모든 내용을 의미
	  -->
	  <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	  <resources location="/resources/" mapping="/res/**"></resources>
	
	<!-- 
		파일 업로드를 처리하는 도구
		(multipart/form-data 요청을 처리하는 도구)
		
		(주의) 아이디는 무조건 multipartResolver라고 지어야 한다
	 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding" value="UTF-8"></beans:property>
		<beans:property name="maxUploadSize" value="10000000"></beans:property>
		<beans:property name="maxUploadSizePerFile" value="5000000"></beans:property>
	</beans:bean>
	
	<!-- 
		Interceptor 등록 
		- MVC 설정 사용
		-exclude-mapping 사용하면 주소의 뺄셈 가능
	-->
	<interceptors>
		<interceptor>
			<mapping path="/**"/>
			<exclude-mapping path="/test"/>
			<beans:bean class="com.kh.arori.interceptor.TestInterceptor"></beans:bean>
		</interceptor>
		<interceptor>
			<mapping path="/**"/>
			<beans:bean class="com.kh.arori.interceptor.MemberInterceptor"></beans:bean>
		</interceptor>
	</interceptors>
	
	<!-- 
		Web Socket
		- websocket 을 사용하기 위해서 namespace를 해당 xml 에 등록
	-->
<!-- 	<beans:bean id="test" class="com.kh.arori.websocket.WebSocketTestServer"></beans:bean>
	<websocket:handlers>
		접속 주소 > ws://localhost:포트번호/spring/basic
		<websocket:mapping handler="test" path="/test/basic"/>
		설정 추가
		HttpSession 정보를 가져오기 위한 도구 등록
		<websocket:handshake-interceptors>
			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"></beans:bean>
		</websocket:handshake-interceptors>
	</websocket:handlers> -->
	
	
</beans:beans>